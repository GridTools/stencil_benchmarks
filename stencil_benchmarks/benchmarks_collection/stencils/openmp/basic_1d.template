#include <cstddef>
#include <cstdint>

extern "C" void kernel(
  {% for arg in args %}
    {{ ctype }} * __restrict__ {{ arg }}{{ "," if not loop.last }}
  {% endfor %}
) {
  constexpr std::ptrdiff_t last = {{ strides[0] }} * ({{ domain[0] }} - 1) +
                                  {{ strides[1] }} * ({{ domain[1] }} - 1) +
                                  {{ strides[2] }} * ({{ domain[2] }} - 1);

#pragma omp parallel for simd
  for (std::ptrdiff_t index = 0; index <= last; ++index) {
    {{ body }}
  }
}