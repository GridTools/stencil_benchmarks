{% extends "base.j2" %}

{% block kernel_invoke %}
    constexpr std::ptrdiff_t last = {{ strides[0] }} * ({{ domain[0] }} - 1) +
                                    {{ strides[1] }} * ({{ domain[1] }} - 1) +
                                    {{ strides[2] }} * ({{ domain[2] }} - 1);

    #pragma omp parallel for simd
    #ifdef __INTEL_COMPILER
    #pragma vector nontemporal
    #endif
    for (std::ptrdiff_t index = 0; index <= last; ++index) {
        {{ body }}
    }

{% endblock kernel_invoke %}